{{define "base"}}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!--Page Title-->
    <title>Document</title>
    <!--Bootstrap CSS-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <!--Datepicker CSS-->
    <link rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker-bs5.min.css">
    <!--Notie CSS (For displaying notifications on the reservation page)-->
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <!--My CSS-->
    <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
</head>

<body>
    <!--Navbar-->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Navbar</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            Rooms
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="/generals-quarters">General's Quarters</a></li>
                            <li><a class="dropdown-item" href="/majors-suite">Major's Suite</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/search-availability">Book Now</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contact">Contact Us</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    {{block "content" .}}

    {{end}}

    <!--Footer-->
    <footer>
        <div class="row my-footer">
            <div class="col">
                Left
            </div>
            <div class="col">
                Middle
            </div>
            <div class="col">
                Right
            </div>
        </div>
    </footer>


    <!--Bootstrap JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <!--Datepicker JS-->
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/js/datepicker-full.min.js"></script>
    <!--Notie JS-->
    <script src="https://unpkg.com/notie"></script>
    <!--Sweet Alert Modals-->
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {{block "js" .}}

    {{end}}

    <script>
        let attention = Prompt()

        function notify(msg, msgType) {
            notie.alert({
                type: msgType,
                text: msg
            });
        }
        // Prompt is the JS module that handles all alerts, popups and notifications
        function Prompt() {
            async function custom(c) {
                const {
                    msg = "",
                    title = ""
                } = c;

                const { value: result } = await Swal.fire({
                    title: title,
                    html: msg,
                    backdrop: true,
                    showCancelButton: true,
                    focusConfirm: false,
                    willOpen: () => {
                        if (c.willOpen !== undefined){
                            c.willOpen();
                        }
                    },
                    preConfirm: () => {
                        return [
                            document.getElementById("start").value,
                            document.getElementById("end").value
                        ]
                    },
                    didOpen: () => {
                        if (c.didOpen !== undefined){
                            c.didOpen();
                        }
                    }
                })

                if (result) {
                    if (result.dismiss !== Swal.DismissReason.cancel) {
                        if (result.value !== ""){
                            if (c.callback !== undefined){
                                c.callback(result);
                            }
                        } else {
                            c.callback(false);
                        }
                    } else {
                        c.callback(false);
                    }
                }
            }

            let toast = function (c) {
                const {
                    msg = "",
                    icon = "success",
                    position = "top-end"
                } = c;

                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    position: position,
                    icon: icon,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener("mouseenter", Swal.stopTimer)
                        toast.addEventListener("mouseleave", Swal.resumeTimer)
                    }
                })

                Toast.fire({})
            }

            let success = function (c) {
                const {
                    msg = "",
                    title = "",
                    footer = ""
                } = c;

                Swal.fire({
                    icon: 'success',
                    title: title,
                    text: msg,
                    footer: footer
                })
            }

            let error = function (c) {
                const {
                    msg = "",
                    title = "",
                    footer = ""
                } = c;

                Swal.fire({
                    icon: 'error',
                    title: title,
                    text: msg,
                    footer: footer
                })
            }

            return {
                toast: toast,
                success: success,
                error: error,
                custom: custom
            }
        }
    </script>
</body>

</html>
{{end}}